name: Deploy Spring Boot App to EC2 with Docker

on:
  push:
    branches: master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java 17 (can also be cached for faster builds)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build JAR with Maven
      - name: Build JAR with Maven
        run: mvn clean package -DskipTests
        # Debugging Maven build output
        continue-on-error: true

      # Step 4: Cache Maven dependencies (optional but should speed up Maven builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: docker build -t springboot-app .
        # Debugging Docker build output
        continue-on-error: true

      # Step 6: SSH into EC2 and Deploy
      - name: Run Docker Container on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to the project directory
            cd ~
            
            # Clone or pull latest changes
            if [ ! -d "springboot-app" ]; then
              git clone https://github.com/sakshijain2002/springbootassignment springboot-app
            fi
            cd springboot-app
            git pull origin master
            
            # Build the JAR file (if not already done)
            mvn clean package -DskipTests
            docker build -t springboot-app .
            
            # Remove old Docker container if any
            docker stop springboot-app-container || true
            docker rm springboot-app-container || true
            
            # Run the Docker container with the latest image
            docker run -d -p 8080:8080 --name springboot-app-container springboot-app
        continue-on-error: true
