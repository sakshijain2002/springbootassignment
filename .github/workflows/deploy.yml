name: Deploy to EC2 and RDS

on:
  push:
    branches:
      - master  # Trigger on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner for this job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}  # Using the secret for the private key

      - name: Set up SSH known hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} <<EOF
            # Ensure the springboot-assignment directory exists
            if [ ! -d "/home/ec2-user/springboot-assignment" ]; then
              git clone https://github.com/sakshijain2002/springbootassignment /home/ec2-user/springboot-assignment
            fi
            cd /home/ec2-user/springboot-assignment  # Navigate to the project directory
            git pull origin main  # Pull the latest code
            mvn clean package -DskipTests  # Run the Maven build on EC2
              # Docker container conflict resolution
            docker rm -f springboot-app || true  # Force remove the existing container
            docker-compose down || true  # Stop and remove all containers, networks, and volumes
            docker-compose up -d  # Rebuild and start the container
            
          
