name: Deploy to EC2

on:
  push:
    branches:
      - master  # or main

jobs:
  deploy:
    name: Build & Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java and Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Build Spring Boot app
      - name: Build with Maven
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
        run: mvn clean package -DskipTests

      # Rename .jar for Docker
      - name: Rename JAR file
        run: mv target/*.jar target/app.jar

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker image
      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_IMAGE }} .

      # Push Docker image to registry (e.g., Docker Hub or ECR)
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_IMAGE }}

      # Add EC2 to known_hosts (avoids SSH prompt)
      - name: Add EC2 to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # SSH into EC2 and deploy Docker container
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_IMAGE }}
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 8080:8080 ${{ secrets.DOCKER_IMAGE }}
