name: Deploy Spring Boot App on Self-Hosted Runner

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 3: Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 4: Build the project with Maven (skip tests for speed)
      - name: Build with Maven
        run: mvn -B clean package -DskipTests -T 1C

      # Step 5: Stop and remove existing container (if running)
      - name: Stop existing container
        run: |
          docker stop springboot-app || true
          docker rm springboot-app || true

      # Step 6: Remove old Docker image (if any)
      - name: Remove old Docker image
        run: docker image rm springboot-app || true

      # Step 7: Build new Docker image
      - name: Build Docker image
        run: docker build -t springboot-app .

      # Step 8: Run Docker container with secrets passed as environment variables
      - name: Run Docker container
        run: |
          docker run -d \
            --name springboot-app \
            -e RDS_URL=${{ secrets.RDS_URL }} \
            -e RDS_USERNAME=${{ secrets.RDS_USERNAME }} \
            -e RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} \
            -p 8080:8080 \
            springboot-app

      # Step 9: Show container logs (for debugging)
      - name: Show Docker container logs
        run: |
          docker logs springboot-app

      # Step 10: Optional cleanup to save space
      - name: Cleanup Docker images
        run: docker image prune -f

      # Step 11: Final status
      - name: Done
        run: echo "âœ… Deployment finished successfully on self-hosted runner"
